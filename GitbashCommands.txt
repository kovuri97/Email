git --version

git config

git config --global user.name "[name]"

git config --global user.email"[email]"

git init

git status

git add

git add -A

git add .

git add *

git add <filename>

git add <directory>

git diff;

git rm --cached -f gitcommands.txt: This will only remove the file from the staging area or remove the index

git reset --hard : This command will remove from staging area as well as from your working directory

git commit -m "message": This command will commit the staged snapshot into the local repository(Git repository)

git log : it show all the commit points done on git repository

git commit -a: This commits any files you have added with the git add command and also commits any files you have changed since then

git reset [commit]: This command undoes all the commits after the specified commit and preserve the changes locally

git reset --hard [commit] This command discards all history and goes back to the specified commit

git rm [file] - It will remove file from your working directory

git log --follow [filename] - This will list down version history for a specific file

git show - Will tell you the audit of your git commands for the last commit

git log --format=oneline

git log --pretty=format:"%h%x09%an%x09%ad%x09%s"

It shows the git log with shorter commit hash, author name, author date and subject

git ls-files

It show information about files in the index and the working tree

 

git remote -v

It will show all the remote repositories linked with local repository

 

git remote add origin <githuburl without .git extension>

It will create a link between local repository and remote repository with the alias name as "origin"

 

git push origin master -f

It will push the committed code of local repository to the remote repository mapped with the alias origin

git branch

It will show all the branches with current branch having prefix as *

 

git branch <branchname>

It will create the branch similar to master branch

 

git checkout <branchname>

It will switch your working directory to the checkout branchname

 

git checkout -b <branchname>

It will create a branch and switched the working directory pointer to new created branch

 

git branch -d <branchname>

It will delete the branchname

 

git merge <branchname> : first you will checkout to master and then use the command git merge with a new branchname

 

git clone <github url> : It will copy your repository to the local machine

 

git fetch origin

It only downloads new data from a remote repository , it doesn't integrate any of the new data into your working files

 

git pull origin master

It will update or replace your current head branch with the latest changes from the remote server. It also integrates it into your current working copy files.

 

git archive master --format=zip --output=../metgitdemo.zip

git branch -a  It will help to check all the branches include remote github available branches also

git push -u origin2 test(new branch name) It will help to create the new branch in github
